[{"/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/index.js":"1","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/App.js":"2","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/reportWebVitals.js":"3","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/Grade.js":"4","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/CourseInfo.js":"5","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/Notes.js":"6","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/GPA.js":"7","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/GraduateAttributes.js":"8","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/CEABGuidelines.js":"9","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/LearnOutcome.js":"10","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/TableConstants.js":"11"},{"size":480,"mtime":1610135231069,"results":"12","hashOfConfig":"13"},{"size":1886,"mtime":1610135231069,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610135231069,"results":"15","hashOfConfig":"13"},{"size":4649,"mtime":1610135231069,"results":"16","hashOfConfig":"13"},{"size":4157,"mtime":1610135231069,"results":"17","hashOfConfig":"13"},{"size":1109,"mtime":1610135231069,"results":"18","hashOfConfig":"13"},{"size":4118,"mtime":1610135231069,"results":"19","hashOfConfig":"13"},{"size":2837,"mtime":1610135231069,"results":"20","hashOfConfig":"13"},{"size":1745,"mtime":1610135231069,"results":"21","hashOfConfig":"13"},{"size":2061,"mtime":1610401667151,"results":"22","hashOfConfig":"13"},{"size":2240,"mtime":1610135231069,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"15oniqe",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/index.js",[],["53","54"],"/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/App.js",["55","56"],"import './App.css';\nimport 'bulma/css/bulma.css';\nimport CourseInfo from './components/CourseInfo';\nimport LearnOutcome from './components/LearnOutcome';\nimport Grade from './components/Grade';\nimport GPA from './components/GPA';\nimport Notes from './components/Notes';\nimport GraduateAttributesTable from \"./components/GraduateAttributes\";\nimport CEABGuidelines from \"./components/CEABGuidelines\";\n\nfunction App() {\n\n  const style_buttons = {\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    padding: '10px'\n  };\n\n  return (\n    <nav className=\"breadcrumb has-succeeds-separator\" aria-label=\"breadcrumbs\">\n      <div>\n        <ul>\n          <li className=\"is-active\"><a href=\"#\" aria-current=\"page\">New Outline</a></li>\n          <li><a href=\"#\">Retrieve Last Saved Outline</a></li>\n        </ul>\n      </div>\n      <br></br>\n      <div className=\"App\">\n        <CourseInfo />\n        <h1>2. Learning Outcomes</h1>\n        <p>At the end of this course, you will be able to:</p>\n        <LearnOutcome />\n        <br></br>\n        <p style={{ wordBreak: 'break-all', whiteSpace: \"normal\" }}>Graduate Attributes are generic characteristics specified by the CEAB (Canadian Engineering Accreditation Board), expected to be exhibited by graduates of Canadian engineering schools. This table summarizes how the Learning Outcomes relate to key Graduate Attributes addressed in this course.</p>\n        <br></br>\n        <GraduateAttributesTable />\n        <br></br>\n        <CEABGuidelines />\n        <h1>3. Final Grade Determination</h1>\n        <p>The final grade in this course will be based on the following components:</p>\n        <Grade />\n        <Notes />\n        <GPA />\n      </div>\n      <div style={style_buttons}>\n        <button className=\"button\">Clear All</button>\n        <button className=\"button\">Save</button>\n      </div>\n    </nav >\n  );\n}\n\nexport default App;\n","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/reportWebVitals.js",[],"/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/Grade.js",["57"],"\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\n\nexport default function Editable() {\n  const { useState } = React;\n\n  const [columns, setColumns] = useState([\n    { title: 'Component', field: 'component' },\n    { title: 'Learning Outcomes', field: 'outcome' },\n    { title: 'Weight%', field: 'weight', type: 'numeric' },\n\n  ]);\n\n  const [data, setData] = useState([\n    { component: 'Assignments', outcome: '1-7', weight: 25 },\n    { component: 'Project', outcome: '1-7', weight: 10 },\n    { component: 'Total', outcome: '', weight: 35}\n  ]);\n\n  return (\n\n      <\n        MaterialTable\n        title=\"Final Grade Determination\"\n        columns={columns}\n        data={data}\n        icons={tableIcons}\n        options={\n          { search: false, paging: false }\n        }\n\n\n        editable={{\n          isEditHidden: rowData => rowData.component === 'Total',\n          isDeleteHidden: rowData => rowData.component === 'Total',\n          onRowAdd: newData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const comp = data.slice(0, -1);\n                const [total,] = data.reverse();\n                const newTotal = total.weight + newData.weight;\n                if (newTotal <= 100) {\n                  total.weight = newTotal;\n                  setData([...comp, newData, total]);\n                } else {\n                  setData([...comp, total]);\n                  alert('Grade components cannot exceed 100%!');\n                }\n                resolve();\n              }, 1000)\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...data];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                dataUpdate[dataUpdate.length - 1].weight += newData.weight - oldData.weight;\n                setData([...dataUpdate]);\n                resolve();\n              }, 1000)\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                dataDelete[dataDelete.length - 1].weight -= oldData.weight;\n                setData([...dataDelete]);\n                resolve()\n              }, 1000)\n\n            }),\n\n\n        }}\n\n      />\n\n\n\n\n  )\n}\n","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/CourseInfo.js",[],"/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/Notes.js",[],"/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/GPA.js",["58"],"\nimport React from 'react';\n\n\nimport MaterialTable from 'material-table';\n\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\n\nexport default function Editable() {\n  const { useState } = React;\n\n  const [columns, setColumns] = useState([\n    { title: 'Letter Grade', field: 'grade' },\n    { title: 'Total Mark (T)', field: 'mark' }\n\n\n  ]);\n\n  const [data, setData] = useState([\n    { grade: 'A+', mark: 'T>=95.0%' },\n    { grade: 'A', mark: '90.0<=T<95.0%' },\n    { grade: 'A-', mark: '85.0<=T<90.0%' },\n    { grade: 'B+', mark: '80.0<=T<85.0%' },\n    { grade: 'B', mark: '75.0<=T<80.0%' },\n    { grade: 'B-', mark: '70.0<=T<75.0%' },\n    { grade: 'C+', mark: '65.0<=T<70.0%' },\n    { grade: 'C', mark: '60.0<=T<65.0%' },\n    { grade: 'C-', mark: '56.0<=T<60.0%' },\n    { grade: 'D+', mark: '53.0<=T<56.0%' },\n    { grade: 'D', mark: '50.0<=T<53.0%' },\n    { grade: 'F', mark: 'T<50.0%' }\n  ]);\n\n\n\n\n\n  return (\n    <\n      MaterialTable\n      title=\"GPA Conversion\"\n      columns={columns}\n      data={data}\n      icons={tableIcons}\n      options={\n        { search: false }\n      }\n\n      editable={{\n        onRowAdd: newData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setData([...data, newData]);\n\n              resolve();\n            }, 1000)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...data];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setData([...dataUpdate]);\n\n              resolve();\n            }, 1000)\n          }),\n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...data];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setData([...dataDelete]);\n\n              resolve()\n            }, 1000)\n\n          }),\n\n\n      }}\n\n    />\n\n\n  )\n}\n","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/GraduateAttributes.js",["59"],"import React from 'react';\nimport MaterialTable from 'material-table';\nimport { useState, useReducer } from \"react\";\nimport { TableIcons } from \"./TableConstants\";\n\nconst GraduateAttributesTable = () => {\n\n    const [data, setData] = useState([\n        {\n            outcomeNum: \"1\",\n            gradAttribute: \"A1. Test\",\n            instructionLevel: \"A (Applied)\"\n        }\n\n    ])\n\n    const paddingZero = {\n        padding: \"0px\"\n    }\n\n    return (\n        <MaterialTable\n            style={paddingZero}\n            options={\n                { search: false, paging: false }\n            }\n            columns={\n                [\n                    { title: \"Learning Outcome\", field: \"outcomeNum\" },\n                    { title: \"Graduate Attribute\", field: \"gradAttribute\" },\n                    { title: \"Instruction Level\", field: \"instructionLevel\" }\n                ]}\n            title=\"Graduate Attributes\"\n            icons={TableIcons}\n            data={data}\n            editable={{\n                onRowAdd: newData =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            setData([...data, newData]);\n                            resolve();\n                        }, 1000)\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            const dataUpdate = [...data];\n                            const index = oldData.tableData.id;\n                            dataUpdate[index] = newData;\n                            setData([...dataUpdate]);\n                            resolve();\n                        }, 1000)\n                    }),\n                onRowDelete: oldData =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            const dataDelete = [...data];\n                            const index = oldData.tableData.id;\n                            dataDelete.splice(index, 1);\n                            setData([...dataDelete]);\n                            resolve()\n                        }, 1000)\n                    }),\n            }}\n        />\n    )\n}\n\n\nexport default GraduateAttributesTable;\n\n// function LearnOutcome() {\n//   const [outcomes, setOutcomes] = useState(\"Please enter a learning outcome!\");\n//   return (\n//     <div className=\"container\" style={{ paddingLeft: \"5px\", margin: \"0px\" }}>\n//       <h1>2. Learning Outcomes</h1>\n//       <div className='outcomes_table' style={{ paddingLeft: \"0px\", margin: \"0px\" }}>\n//         <p>At the end of this course, you will be able to: </p>\n//         <OutcomesTable />\n//         <br></br>\n//       </div>\n//     </div >\n//   );\n// }\n\n// export default LearnOutcome;\n","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/CEABGuidelines.js",["60","61","62","63"],"import React from 'react';\nimport MaterialTable from 'material-table';\nimport { useState, useReducer } from \"react\";\nimport { TableIcons } from \"./TableConstants\";\n\nconst CEABGuidelines = () => {\n\n    const guidelineStyle = {\n        paddingLeft: \"0\"\n    }\n\n    const listItemStyle = {\n        listStyle: \"disc\",\n        listStylePosition: \"inside\",\n        listStyleType: \"disc\",\n        paddingLeft: \"20px\",\n        display: 'block'\n    }\n\n    return (\n        <div style={guidelineStyle} className=\"guidelines\">\n            <p style={{ fontWeight: \"bold\", paddingLeft: 0 }}>CEAB Graduate Attributes</p>\n            <ul style={listItemStyle}>\n                <li>A1. A knowledge base for engineering</li>\n                <li>A2. Problem analysis</li>\n                <li>A3. Problem Analysis</li>\n                <li>A4. Design</li>\n                <li>A5. Use of engineering tools</li>\n                <li>A6. Individual and team work</li>\n                <li>A7. Communication skills</li>\n                <li>A8. Professionalism</li>\n                <li>A9. Impact of engineering on society/environment</li>\n                <li>A10. Ethics and equity</li>\n                <li>A11. Economics and project management</li>\n                <li>A12. Life-long learning</li>\n            </ul >\n            <br></br>\n            <p style={{ fontWeight: \"bold\", paddingLeft: 0 }}>Instruction Level</p>\n            <ul style={listItemStyle}>\n                <li>I (Introduced):     Introductory level</li>\n                <li>D (Developed):      Intermediate development level</li>\n                <li>A (Applied):        Advanced application level</li>\n            </ul>\n            <br></br>\n        </div >\n    )\n}\n\n\nexport default CEABGuidelines;\n","/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/LearnOutcome.js",["64","65","66"],"/home/mklasby/Documents/meng/607/Project/WebDev/ENSF607_Web_Project/course-outline/react/src/components/TableConstants.js",["67"],"\n\nimport React from 'react';\n\nimport MaterialTable from 'material-table';\n\n\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nexport const TableIcons = tableIcons; ",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":23,"column":37,"nodeType":"74","endLine":23,"endColumn":69},{"ruleId":"72","severity":1,"message":"73","line":24,"column":15,"nodeType":"74","endLine":24,"endColumn":27},{"ruleId":"75","severity":1,"message":"76","line":47,"column":19,"nodeType":"77","messageId":"78","endLine":47,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":52,"column":19,"nodeType":"77","messageId":"78","endLine":52,"endColumn":29},{"ruleId":"75","severity":1,"message":"79","line":3,"column":20,"nodeType":"77","messageId":"78","endLine":3,"endColumn":30},{"ruleId":"75","severity":1,"message":"80","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":21},{"ruleId":"75","severity":1,"message":"81","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":18},{"ruleId":"75","severity":1,"message":"79","line":3,"column":20,"nodeType":"77","messageId":"78","endLine":3,"endColumn":30},{"ruleId":"75","severity":1,"message":"82","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":20},{"ruleId":"75","severity":1,"message":"79","line":3,"column":20,"nodeType":"77","messageId":"78","endLine":3,"endColumn":30},{"ruleId":"75","severity":1,"message":"83","line":13,"column":10,"nodeType":"77","messageId":"78","endLine":13,"endColumn":18},{"ruleId":"75","severity":1,"message":"84","line":24,"column":9,"nodeType":"77","messageId":"78","endLine":24,"endColumn":20},{"ruleId":"75","severity":1,"message":"80","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":21},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setColumns' is assigned a value but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'MaterialTable' is defined but never used.","'useState' is defined but never used.","'TableIcons' is defined but never used.","'hasError' is assigned a value but never used.","'paddingZero' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]